(var"##MTKArg#261", var"##MTKArg#262", var"##MTKArg#263", var"##MTKArg#264", var"##MTKArg#265", var"##MTKArg#266", var"##MTKArg#267")->begin
         @inbounds begin
                let (y₁, y₂, t, W1₁ˏ₁, W1₂ˏ₁, W1₃ˏ₁, W1₄ˏ₁, W1₅ˏ₁, W1₁ˏ₂, W1₂ˏ₂, W1₃ˏ₂, W1₄ˏ₂, W1₅ˏ₂, b1₁, b1₂, b1₃, b1₄, b1₅, W2₁ˏ₁, W2₂ˏ₁, W2₃ˏ₁, W2₄ˏ₁, W2₅ˏ₁, W2₁ˏ₂, W2₂ˏ₂, W2₃ˏ₂, W2₄ˏ₂, W2₅ˏ₂, W2₁ˏ₃, W2₂ˏ₃, W2₃ˏ₃, W2₄ˏ₃, W2₅ˏ₃, W2₁ˏ₄, W2₂ˏ₄, W2₃ˏ₄, W2₄ˏ₄, W2₅ˏ₄, W2₁ˏ₅, W2₂ˏ₅, W2₃ˏ₅, W2₄ˏ₅, W2₅ˏ₅, b2₁, b2₂, b2₃, b2₄, b2₅, W3₁ˏ₁, W3₁ˏ₂, W3₁ˏ₃, W3₁ˏ₄, W3₁ˏ₅) = (var"##MTKArg#261"[1], var"##MTKArg#261"[2], var"##MTKArg#262", var"##MTKArg#263"[1], var"##MTKArg#263"[2], var"##MTKArg#263"[3], var"##MTKArg#263"[4], var"##MTKArg#263"[5], var"##MTKArg#263"[6], var"##MTKArg#263"[7], var"##MTKArg#263"[8], var"##MTKArg#263"[9], var"##MTKArg#263"[10], var"##MTKArg#264"[1], var"##MTKArg#264"[2], var"##MTKArg#264"[3], var"##MTKArg#264"[4], var"##MTKArg#264"[5], var"##MTKArg#265"[1], var"##MTKArg#265"[2], var"##MTKArg#265"[3], var"##MTKArg#265"[4], var"##MTKArg#265"[5], var"##MTKArg#265"[6], var"##MTKArg#265"[7], var"##MTKArg#265"[8], var"##MTKArg#265"[9], var"##MTKArg#265"[10], var"##MTKArg#265"[11], var"##MTKArg#265"[12], var"##MTKArg#265"[13], var"##MTKArg#265"[14], var"##MTKArg#265"[15], var"##MTKArg#265"[16], var"##MTKArg#265"[17], var"##MTKArg#265"[18], var"##MTKArg#265"[19], var"##MTKArg#265"[20], var"##MTKArg#265"[21], var"##MTKArg#265"[22], var"##MTKArg#265"[23], var"##MTKArg#265"[24], var"##MTKArg#265"[25], var"##MTKArg#266"[1], var"##MTKArg#266"[2], var"##MTKArg#266"[3], var"##MTKArg#266"[4], var"##MTKArg#266"[5], var"##MTKArg#267"[1], var"##MTKArg#267"[2], var"##MTKArg#267"[3], var"##MTKArg#267"[4], var"##MTKArg#267"[5])
                    (^)((-)((-)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₄ˏ₅)), W3₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₅ˏ₅)), W3₁ˏ₅)), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), W1₁ˏ₁), (*)(W1₁ˏ₂, W2₁ˏ₁)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), W1₂ˏ₁), (*)(W1₂ˏ₂, W2₁ˏ₂))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), W1₃ˏ₁), (*)(W1₃ˏ₂, W2₁ˏ₃))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), W1₄ˏ₁), (*)(W1₄ˏ₂, W2₁ˏ₄))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), W1₅ˏ₁), (*)(W1₅ˏ₂, W2₁ˏ₅))), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), W1₁ˏ₁), (*)(W1₁ˏ₂, W2₂ˏ₁)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), W1₂ˏ₁), (*)(W1₂ˏ₂, W2₂ˏ₂))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), W1₃ˏ₁), (*)(W1₃ˏ₂, W2₂ˏ₃))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), W1₄ˏ₁), (*)(W1₄ˏ₂, W2₂ˏ₄))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), W1₅ˏ₁), (*)(W1₅ˏ₂, W2₂ˏ₅))), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), W1₁ˏ₁), (*)(W1₁ˏ₂, W2₃ˏ₁)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), W1₂ˏ₁), (*)(W1₂ˏ₂, W2₃ˏ₂))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), W1₃ˏ₁), (*)(W1₃ˏ₂, W2₃ˏ₃))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), W1₄ˏ₁), (*)(W1₄ˏ₂, W2₃ˏ₄))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), W1₅ˏ₁), (*)(W1₅ˏ₂, W2₃ˏ₅))), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), W1₁ˏ₁), (*)(W1₁ˏ₂, W2₄ˏ₁)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), W1₂ˏ₁), (*)(W1₂ˏ₂, W2₄ˏ₂))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), W1₃ˏ₁), (*)(W1₃ˏ₂, W2₄ˏ₃))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), W1₄ˏ₁), (*)(W1₄ˏ₂, W2₄ˏ₄))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), W1₅ˏ₁), (*)(W1₅ˏ₂, W2₄ˏ₅))), W3₁ˏ₄)), (+)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), W1₁ˏ₁), (*)(W1₁ˏ₂, W2₅ˏ₁)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), W1₂ˏ₁), (*)(W1₂ˏ₂, W2₅ˏ₂))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), W1₃ˏ₁), (*)(W1₃ˏ₂, W2₅ˏ₃))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), W1₄ˏ₁), (*)(W1₄ˏ₂, W2₅ˏ₄))), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), W1₅ˏ₁), (*)(W1₅ˏ₂, W2₅ˏ₅))), W3₁ˏ₅), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₁ˏ₅))), (tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₁ˏ₅)), W3₁ˏ₁))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₂ˏ₅))), (tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₂ˏ₅)), W3₁ˏ₂))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₃ˏ₅))), (tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₃ˏ₅)), W3₁ˏ₃))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₄ˏ₅))), (tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₄ˏ₅)), W3₁ˏ₄))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₅ˏ₅))), (tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₅ˏ₅)), W3₁ˏ₅)))), y₂)), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), (^)(W1₁ˏ₂, 2)), W2₁ˏ₁), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), (^)(W1₂ˏ₂, 2)), W2₁ˏ₂)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), (^)(W1₃ˏ₂, 2)), W2₁ˏ₃)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), (^)(W1₄ˏ₂, 2)), W2₁ˏ₄)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), (^)(W1₅ˏ₂, 2)), W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), (^)(W1₁ˏ₂, 2)), W2₂ˏ₁), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), (^)(W1₂ˏ₂, 2)), W2₂ˏ₂)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), (^)(W1₃ˏ₂, 2)), W2₂ˏ₃)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), (^)(W1₄ˏ₂, 2)), W2₂ˏ₄)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), (^)(W1₅ˏ₂, 2)), W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), (^)(W1₁ˏ₂, 2)), W2₃ˏ₁), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), (^)(W1₂ˏ₂, 2)), W2₃ˏ₂)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), (^)(W1₃ˏ₂, 2)), W2₃ˏ₃)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), (^)(W1₄ˏ₂, 2)), W2₃ˏ₄)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), (^)(W1₅ˏ₂, 2)), W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), (^)(W1₁ˏ₂, 2)), W2₄ˏ₁), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), (^)(W1₂ˏ₂, 2)), W2₄ˏ₂)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), (^)(W1₃ˏ₂, 2)), W2₄ˏ₃)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), (^)(W1₄ˏ₂, 2)), W2₄ˏ₄)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), (^)(W1₅ˏ₂, 2)), W2₄ˏ₅)), W3₁ˏ₄)), (+)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((*)((*)((*)(-2, (tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2)))), (^)(W1₁ˏ₂, 2)), W2₅ˏ₁), (*)((*)((*)((*)(-2, (tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2)))), (^)(W1₂ˏ₂, 2)), W2₅ˏ₂)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2)))), (^)(W1₃ˏ₂, 2)), W2₅ˏ₃)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2)))), (^)(W1₄ˏ₂, 2)), W2₅ˏ₄)), (*)((*)((*)((*)(-2, (tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂)))), (+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2)))), (^)(W1₅ˏ₂, 2)), W2₅ˏ₅)), W3₁ˏ₅), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₁ˏ₅))), (tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₁ˏ₅)), W3₁ˏ₁))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₂ˏ₅))), (tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₂ˏ₅)), W3₁ˏ₂))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₃ˏ₅))), (tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₃ˏ₅)), W3₁ˏ₃))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₄ˏ₅))), (tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₄ˏ₅)), W3₁ˏ₄))), (*)((*)((*)((*)(-2, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₅ˏ₅))), (tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅))))), (+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2)))), (*)((+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₅ˏ₅)), W3₁ˏ₅)))), t)), 2)
                end
            end
    end