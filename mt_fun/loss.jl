(var"##MTKArg#267", var"##MTKArg#268", var"##MTKArg#269")->begin
        #= /Users/benediktbrantner/.julia/packages/ModelingToolkit/CPB4Z/src/build_function.jl:61 =#
        #= /Users/benediktbrantner/.julia/packages/ModelingToolkit/CPB4Z/src/build_function.jl:62 =#
        #= /Users/benediktbrantner/.julia/packages/ModelingToolkit/CPB4Z/src/build_function.jl:118 =# @inbounds begin
                #= /Users/benediktbrantner/.julia/packages/ModelingToolkit/CPB4Z/src/build_function.jl:118 =#
                let (y₁, y₂, t₁, t₂, Wb₁, Wb₂, Wb₃, Wb₄, Wb₅, Wb₆, Wb₇, Wb₈, Wb₉, Wb₁₀, Wb₁₁, Wb₁₂, Wb₁₃, Wb₁₄, Wb₁₅, Wb₁₆, Wb₁₇, Wb₁₈, Wb₁₉, Wb₂₀, Wb₂₁, Wb₂₂, Wb₂₃, Wb₂₄, Wb₂₅, Wb₂₆, Wb₂₇, Wb₂₈, Wb₂₉, Wb₃₀, Wb₃₁, Wb₃₂, Wb₃₃, Wb₃₄, Wb₃₅, Wb₃₆, Wb₃₇, Wb₃₈, Wb₃₉, Wb₄₀, Wb₄₁, Wb₄₂, Wb₄₃, Wb₄₄, Wb₄₅, Wb₄₆, Wb₄₇, Wb₄₈, Wb₄₉, Wb₅₀, Wb₅₁) = (var"##MTKArg#267"[1], var"##MTKArg#267"[2], var"##MTKArg#268"[1], var"##MTKArg#268"[2], var"##MTKArg#269"[1], var"##MTKArg#269"[2], var"##MTKArg#269"[3], var"##MTKArg#269"[4], var"##MTKArg#269"[5], var"##MTKArg#269"[6], var"##MTKArg#269"[7], var"##MTKArg#269"[8], var"##MTKArg#269"[9], var"##MTKArg#269"[10], var"##MTKArg#269"[11], var"##MTKArg#269"[12], var"##MTKArg#269"[13], var"##MTKArg#269"[14], var"##MTKArg#269"[15], var"##MTKArg#269"[16], var"##MTKArg#269"[17], var"##MTKArg#269"[18], var"##MTKArg#269"[19], var"##MTKArg#269"[20], var"##MTKArg#269"[21], var"##MTKArg#269"[22], var"##MTKArg#269"[23], var"##MTKArg#269"[24], var"##MTKArg#269"[25], var"##MTKArg#269"[26], var"##MTKArg#269"[27], var"##MTKArg#269"[28], var"##MTKArg#269"[29], var"##MTKArg#269"[30], var"##MTKArg#269"[31], var"##MTKArg#269"[32], var"##MTKArg#269"[33], var"##MTKArg#269"[34], var"##MTKArg#269"[35], var"##MTKArg#269"[36], var"##MTKArg#269"[37], var"##MTKArg#269"[38], var"##MTKArg#269"[39], var"##MTKArg#269"[40], var"##MTKArg#269"[41], var"##MTKArg#269"[42], var"##MTKArg#269"[43], var"##MTKArg#269"[44], var"##MTKArg#269"[45], var"##MTKArg#269"[46], var"##MTKArg#269"[47], var"##MTKArg#269"[48], var"##MTKArg#269"[49], var"##MTKArg#269"[50], var"##MTKArg#269"[51])
                    (+)((^)((-)((+)((+)(0, (*)(0, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₁, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₆)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₁)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₆)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₁), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₆)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₁)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₆, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₁, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₆, Wb₅)), Wb₄₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₂, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₇)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₂)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₇)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₂), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₇)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₇), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₇, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₂, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₇, Wb₅)), Wb₄₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₃, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₈)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₃)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₈)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₃), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₈)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₈), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₈, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₃, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₈, Wb₅)), Wb₄₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₄, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₉)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₄)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₉)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₄), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₉)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₉), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₉, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₄, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₉, Wb₅)), Wb₄₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₅, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₂₀)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₅)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₃₀)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₅), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₄₀)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₂₀), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₅)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₃, Wb₃₀)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₅, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₄₀, Wb₅)), Wb₅₀)))), (*)(1, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₁, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₆)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₁)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₆)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₁), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₆)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₆, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₁, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₆, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₁, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₆)), Wb₄₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₂, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₇)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₂)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₇)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₂), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₇)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₇, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₂, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₇, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₂, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₇)), Wb₄₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₃, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₈)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₃)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₈)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₃), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₈)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₈, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₃, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₈, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₃, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₈)), Wb₄₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₄, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₉)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₄)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₉)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₄), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₉)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₉, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₄, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₉, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₄, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₉)), Wb₄₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₅, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₂₀)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₅)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₃₀)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₅), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₄₀)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₂₀, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₅, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₃₀, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₅, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₄₀)), Wb₅₀)))), t₁), 2), (^)((-)((+)((+)(0, (*)(-1, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₁, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₆)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₁)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₆)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₁), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₆)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₁)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₆, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₁, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₆, Wb₅)), Wb₄₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₂, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₇)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₂)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₇)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₂), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₇)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₇), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₇, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₂, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₇, Wb₅)), Wb₄₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₃, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₈)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₃)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₈)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₃), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₈)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₈), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₈, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₃, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₈, Wb₅)), Wb₄₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₄, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₉)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₄)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₉)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₄), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₉)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₁₉), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₉, Wb₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₄, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₃₉, Wb₅)), Wb₄₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₅, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₂₀)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₅)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₃₀)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₅), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₄₀)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁, Wb₂₀), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂, Wb₂₅)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₃, Wb₃₀)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₅, Wb₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₄₀, Wb₅)), Wb₅₀)))), (*)(0, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₁, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₆)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₁)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₆)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₁), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₆)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₆, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₁, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₆, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₁, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₆)), Wb₄₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₂, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₇)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₂)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₇)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₂), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₇)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₇, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₂, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₇, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₂, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₇)), Wb₄₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₃, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₈)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₃)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₈)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₃), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₈)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₈, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₃, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₈, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₃, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₈)), Wb₄₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₄, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₁₉)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₄)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₂₉)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₄), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₃₉)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₁₉, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₄, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₂₉, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₄, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₃₉)), Wb₄₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(Wb₄₅, (*)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), Wb₂₀)), (*)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), Wb₂₅)), (*)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), Wb₃₀)), (+)((*)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), Wb₃₅), (*)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), Wb₄₀)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₁, (*)(Wb₁, y₁), (*)(Wb₆, y₂))), 2))), Wb₂₀, Wb₆), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₂, (*)(Wb₂, y₁), (*)(Wb₇, y₂))), 2))), Wb₂₅, Wb₇)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₃, (*)(Wb₃, y₁), (*)(Wb₈, y₂))), 2))), Wb₃₀, Wb₈)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₄, (*)(Wb₄, y₁), (*)(Wb₉, y₂))), 2))), Wb₃₅, Wb₉)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(Wb₁₅, (*)(Wb₁₀, y₂), (*)(Wb₅, y₁))), 2))), Wb₁₀, Wb₄₀)), Wb₅₀)))), t₂), 2))
                end
            end
    end