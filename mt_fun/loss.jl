(var"##MTKArg#271", var"##MTKArg#272", var"##MTKArg#273", var"##MTKArg#274", var"##MTKArg#275", var"##MTKArg#276", var"##MTKArg#277")->begin
         @inbounds begin
                let (y₁, y₂, t₁, t₂, W1₁ˏ₁, W1₂ˏ₁, W1₃ˏ₁, W1₄ˏ₁, W1₅ˏ₁, W1₁ˏ₂, W1₂ˏ₂, W1₃ˏ₂, W1₄ˏ₂, W1₅ˏ₂, b1₁, b1₂, b1₃, b1₄, b1₅, W2₁ˏ₁, W2₂ˏ₁, W2₃ˏ₁, W2₄ˏ₁, W2₅ˏ₁, W2₁ˏ₂, W2₂ˏ₂, W2₃ˏ₂, W2₄ˏ₂, W2₅ˏ₂, W2₁ˏ₃, W2₂ˏ₃, W2₃ˏ₃, W2₄ˏ₃, W2₅ˏ₃, W2₁ˏ₄, W2₂ˏ₄, W2₃ˏ₄, W2₄ˏ₄, W2₅ˏ₄, W2₁ˏ₅, W2₂ˏ₅, W2₃ˏ₅, W2₄ˏ₅, W2₅ˏ₅, b2₁, b2₂, b2₃, b2₄, b2₅, W3₁ˏ₁, W3₁ˏ₂, W3₁ˏ₃, W3₁ˏ₄, W3₁ˏ₅) = (var"##MTKArg#271"[1], var"##MTKArg#271"[2], var"##MTKArg#272"[1], var"##MTKArg#272"[2], var"##MTKArg#273"[1], var"##MTKArg#273"[2], var"##MTKArg#273"[3], var"##MTKArg#273"[4], var"##MTKArg#273"[5], var"##MTKArg#273"[6], var"##MTKArg#273"[7], var"##MTKArg#273"[8], var"##MTKArg#273"[9], var"##MTKArg#273"[10], var"##MTKArg#274"[1], var"##MTKArg#274"[2], var"##MTKArg#274"[3], var"##MTKArg#274"[4], var"##MTKArg#274"[5], var"##MTKArg#275"[1], var"##MTKArg#275"[2], var"##MTKArg#275"[3], var"##MTKArg#275"[4], var"##MTKArg#275"[5], var"##MTKArg#275"[6], var"##MTKArg#275"[7], var"##MTKArg#275"[8], var"##MTKArg#275"[9], var"##MTKArg#275"[10], var"##MTKArg#275"[11], var"##MTKArg#275"[12], var"##MTKArg#275"[13], var"##MTKArg#275"[14], var"##MTKArg#275"[15], var"##MTKArg#275"[16], var"##MTKArg#275"[17], var"##MTKArg#275"[18], var"##MTKArg#275"[19], var"##MTKArg#275"[20], var"##MTKArg#275"[21], var"##MTKArg#275"[22], var"##MTKArg#275"[23], var"##MTKArg#275"[24], var"##MTKArg#275"[25], var"##MTKArg#276"[1], var"##MTKArg#276"[2], var"##MTKArg#276"[3], var"##MTKArg#276"[4], var"##MTKArg#276"[5], var"##MTKArg#277"[1], var"##MTKArg#277"[2], var"##MTKArg#277"[3], var"##MTKArg#277"[4], var"##MTKArg#277"[5])
                    (+)((^)((-)((+)((+)(0, (*)(0, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₄ˏ₅)), W3₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₅ˏ₅)), W3₁ˏ₅)))), (*)(1, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₄ˏ₅)), W3₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₅ˏ₅)), W3₁ˏ₅)))), t₁), 2), (^)((-)((+)((+)(0, (*)(-1, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₄ˏ₅)), W3₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₁, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₁, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₁, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₁, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₁, W2₅ˏ₅)), W3₁ˏ₅)))), (*)(0, (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₁, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₁ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₁ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₁ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₁ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₁ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₁ˏ₅)), W3₁ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₂, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₂ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₂ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₂ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₂ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₂ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₂ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₂ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₂ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₂ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₂ˏ₅)), W3₁ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₃, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₃ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₃ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₃ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₃ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₃ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₃ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₃ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₃ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₃ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₃ˏ₅)), W3₁ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₄, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₄ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₄ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₄ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₄ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₄ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₄ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₄ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₄ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₄ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₄ˏ₅)), W3₁ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)((+)((+)((+)(b2₅, (*)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), W2₅ˏ₁)), (*)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), W2₅ˏ₂)), (*)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), W2₅ˏ₃)), (+)((*)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), W2₅ˏ₄), (*)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), W2₅ˏ₅)))), 2))), (+)((+)((+)((+)((*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₁, (*)(W1₁ˏ₁, y₁), (*)(W1₁ˏ₂, y₂))), 2))), W1₁ˏ₂, W2₅ˏ₁), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₂, (*)(W1₂ˏ₁, y₁), (*)(W1₂ˏ₂, y₂))), 2))), W1₂ˏ₂, W2₅ˏ₂)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₃, (*)(W1₃ˏ₁, y₁), (*)(W1₃ˏ₂, y₂))), 2))), W1₃ˏ₂, W2₅ˏ₃)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₄, (*)(W1₄ˏ₁, y₁), (*)(W1₄ˏ₂, y₂))), 2))), W1₄ˏ₂, W2₅ˏ₄)), (*)((+)(1, (*)(-1, (^)((tanh)((+)(b1₅, (*)(W1₅ˏ₁, y₁), (*)(W1₅ˏ₂, y₂))), 2))), W1₅ˏ₂, W2₅ˏ₅)), W3₁ˏ₅)))), t₂), 2))
                end
            end
    end